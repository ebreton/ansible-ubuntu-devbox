---
# tasks/main.yml: Main tasks file for ansible-ubuntu-devbox

- name: Add Docker gpg key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    id: 0EBFCD88
    state: present
  tags:
    - os_packages
    - docker

- name: Add Docker apt repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present
  tags:
    - os_packages
    - docker

- name: Update all packages to the latest version
  apt:
    update_cache: yes
    upgrade: dist
  tags:
    - update
    - os_packages
    - docker

- name: Install OS packages
  apt:
    update_cache: yes
    name: "{{ item }}"
  with_items: "{{ ubuntu_devbox_os_packages }}"
  tags:
    - os_packages
    - docker

- name: Enable (and start) docker service
  systemd:
    name: docker
    enabled: yes
    state: started
  tags:
    - docker

- name: Update pip
  pip:
    name: pip
    extra_args: --upgrade
  tags:
    - update
    - python_packages
    - docker

- name: Python packages
  pip:
    name: "{{ item }}"
    state: latest
  with_items: "{{ ubuntu_devbox_python_packages }}"
  tags:
    - python_packages
    - docker

- name: Download Go archive
  get_url: "url={{ ubuntu_devbox_go_urlbase }}/{{ ubuntu_devbox_go_archive }} dest=/tmp/{{ ubuntu_devbox_go_archive }} sha256sum={{ ubuntu_devbox_go_sha256sum }}"
  tags:
    - go_packages

- name: Unpack Go archive
  unarchive:
    src: "/tmp/{{ ubuntu_devbox_go_archive }}"
    dest: "{{ ubuntu_devbox_go_root }}"
    copy: no
  tags:
    - go_packages

- name: Create user account
  user: "name={{ ubuntu_devbox_user }} password={{ ubuntu_devbox_passwd }} home={{ ubuntu_devbox_home_dir }} comment='{{ ubuntu_devbox_comment }}' shell={{ ubuntu_devbox_shell }} groups=sudo append=yes"
  tags:
    - user_account

- name: Add user to docker group
  user:
    name: "{{ ubuntu_devbox_user }}"
    groups: docker
    append: yes
  tags:
    - user_account
    - docker

- name: Create ssh dir
  file: "path={{ ubuntu_devbox_home_dir }}/.ssh state=directory owner={{ ubuntu_devbox_user }} group={{ ubuntu_devbox_user }} mode=0700"
  tags:
    - user_account

- name: Install ssh authorized_keys
  copy: 
    src: authorized_keys
    dest: "{{ ubuntu_devbox_home_dir }}/.ssh/authorized_keys"
    owner: "{{ ubuntu_devbox_user }}"
    group: "{{ ubuntu_devbox_user }}"
    mode: "0600"
  tags:
    - user_account

- name: Instal gpg key to sign git commits
  become: True
  become_user: "{{ ubuntu_devbox_user }}"
  copy:
    src: "~/.gnupg/{{ ubuntu_devbox_gpg_keyid }}.key"
    dest: "~/.gnupg/{{ ubuntu_devbox_gpg_keyid }}.key"
    mode: 0600
  tags:
    - user_environment
    - git_conf

- name: Add gpg key
  become: True
  become_user: "{{ ubuntu_devbox_user }}"
  shell: "gpg --allow-secret-key-import --import ~/.gnupg/{{ ubuntu_devbox_gpg_keyid }}.key"
  tags:
    - user_environment
    - git_conf

- name: Setup .extra in user account
  become: True
  become_user: "{{ ubuntu_devbox_user }}"
  template:
    src: templates/.extra
    dest: ~/.extra
    force: yes
  tags:
    - user_environment

- name: Fetch dotfiles
  become: True
  become_user: "{{ ubuntu_devbox_user }}"
  git:
    repo: https://github.com/ebreton/dotfiles.git
    dest: "{{ ubuntu_devbox_dotfiles_dir }}"
  tags:
    - user_environment

- name: Execute dotfiles bootstrap
  become: True
  become_user: "{{ ubuntu_devbox_user }}"
  shell: "{{ ubuntu_devbox_dotfiles_dir }}/bootstrap.sh --force >> {{ ubuntu_devbox_home_dir }}/bootstrap.out"
  tags:
    - user_environment

- name: Extend global config for git
  become: True
  become_user: "{{ ubuntu_devbox_user }}"
  git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: global
  with_items:
    - { "name": "user.name", "value": "{{ ubuntu_devbox_git_authorname }}" }
    - { "name": "user.email", "value": "{{ ubuntu_devbox_git_authoremail }}" }
    - { "name": "user.signingkey", "value": "{{ ubuntu_devbox_gpg_keyid }}" }
  tags:
    - user_environment
    - git_conf

- name: Fetch bash-git
  become: True
  become_user: "{{ ubuntu_devbox_user }}"
  git:
    repo: https://github.com/magicmonty/bash-git-prompt.git
    dest: .bash-git-prompt
    depth: 1
  tags:
    - user_environment

- name: Fetch my-bash-scripts
  git:
    repo: ssh://emmanuelbreton@bitbucket.org/emmanuelbreton/my-bash-scripts.git
    accept_hostkey: True
    dest: "{{ ubuntu_devbox_src_dir }}/my-bash-scripts"
  tags:
    - user_scripts

# - name: Correct ownership on my-bash-scripts
#   file:
#     path: "{{ ubuntu_devbox_src_dir }}/my-bash-scripts"
#     owner: "{{ ubuntu_devbox_user }}"
#     group: "{{ ubuntu_devbox_user }}"
#     recurse: yes
#   tags:
#     - user_account
#     - user_scripts

- name: Link my-bash-scripts binaries into ~/bin
  become: True
  become_user: "{{ ubuntu_devbox_user }}"
  file:
    src: "{{ ubuntu_devbox_src_dir }}/my-bash-scripts/bin/{{ item }}"
    dest: "{{ ubuntu_devbox_home_dir }}/bin/{{ item }}"
    state: link
  with_items:
    - backupAL.sh
    - dumpall.sh
    - pullall.sh
    - statall.sh
    - svnserve.sh
  tags:
    - user_scripts

- name: Create ~/etc dir
  become: True
  become_user: "{{ ubuntu_devbox_user }}"
  file:
    dest: ~/etc
    state: directory
    force: yes
  tags:
    - nginx_conf

- name: Create Nginx conf file
  become: True
  become_user: "{{ ubuntu_devbox_user }}"
  copy:
    src: "{{ item }}"
    dest: "~/etc/{{ item }}"
    force: yes
  with_items:
    - 001-no-https.conf
    - 002-redirects.conf
  tags:
    - nginx_conf