---
# tasks/main.yml: Main tasks file for ansible-ubuntu-devbox

- name: Upgrade apt distribution
  apt:
    update_cache: yes
    upgrade: dist
  tags:
    - update
    - os_packages

- name: Install/update apt packages
  apt:
    update_cache: yes
    name: "{{ item }}"
  with_items: "{{ ubuntu_devbox_os_packages }}"
  tags:
    - update
    - os_packages

- name: Add Docker apt key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    id: 0EBFCD88
    state: present
  tags:
    - os_packages
    - docker

- name: Add Docker apt repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present
  tags:
    - os_packages
    - docker

- name: Install docker-ce
  apt:
    update_cache: yes
    name: "docker-ce"
  tags:
    - os_packages
    - docker

- name: Enable (and start) docker service
  systemd:
    name: docker
    enabled: yes
    state: started
  tags:
    - docker

- name: Upgrade pip
  pip:
    name: pip
    extra_args: --upgrade
  tags:
    - python_packages
    - docker

- name: Pip install packages
  pip:
    name: "{{ item }}"
    state: latest
  with_items: "{{ ubuntu_devbox_python_packages }}"
  tags:
    - python_packages
    - docker

- name: Create user account
  user: "name={{ ubuntu_devbox_user }} password={{ ubuntu_devbox_passwd }} home={{ ubuntu_devbox_home_dir }} comment='{{ ubuntu_devbox_comment }}' shell={{ ubuntu_devbox_shell }} groups=sudo append=yes"
  tags:
    - user_account

- name: Add user to docker group
  user:
    name: "{{ ubuntu_devbox_user }}"
    groups: docker
    append: yes
  tags:
    - user_account
    - docker

- name: Create user .ssh dir
  file: "path={{ ubuntu_devbox_home_dir }}/.ssh state=directory owner={{ ubuntu_devbox_user }} group={{ ubuntu_devbox_user }} mode=0700"
  tags:
    - user_account

- name: Install authorized_keys
  copy:
    src: authorized_keys
    dest: "{{ ubuntu_devbox_home_dir }}/.ssh/authorized_keys"
    owner: "{{ ubuntu_devbox_user }}"
    group: "{{ ubuntu_devbox_user }}"
    mode: "0600"
  tags:
    - user_account

- name: Setup backup-manager.conf
  template:
    src: templates/backup-manager.conf
    dest: "/etc/backup-manager.conf"
    group: "{{ ubuntu_devbox_user }}"
    mode: 0660
    force: yes
  tags:
    - backup

- name: Setup backup crontab
  cron:
    name: "call backup manager"
    minute: "8"
    hour: "19"
    job: "/usr/sbin/backup-manager > /dev/null"
  tags:
    - backup
